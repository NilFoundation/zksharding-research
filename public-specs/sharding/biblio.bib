@inproceedings{PBFT,
      author = {Miguel Castro and Barbara Liskov},
      title = {Practical Byzantine Fault Tolerance},
      booktitle = {3rd Symposium on Operating Systems Design and Implementation (OSDI 99)},
      year = {1999},
      address = {New Orleans, LA},
      url = {https://www.usenix.org/conference/osdi-99/practical-byzantine-fault-tolerance},
      publisher = {USENIX Association},
      month = feb
}
@misc{Tendermint,
      title={Tendermint: Byzantine Fault Tolerance in the Age of Blockchains},
      author={Ethan Buchman},
      year={2016},
      url={https://api.semanticscholar.org/CorpusID:59082906}
}
@INPROCEEDINGS{SyncHotStuff,
      author={Abraham, Ittai and Malkhi, Dahlia and Nayak, Kartik and Ren, Ling and Yin, Maofan},
      booktitle={2020 IEEE Symposium on Security and Privacy (SP)}, 
      title={Sync HotStuff: Simple and Practical Synchronous State Machine Replication}, 
      year={2020},
      volume={},
      number={},
      pages={106-118},
      keywords={Protocols;Synchronization;Steady-state;Delays;Standards;Safety;Proposals},
      doi={10.1109/SP40000.2020.00044}
}
@misc{HotStuff,
      title={HotStuff: BFT Consensus in the Lens of Blockchain}, 
      author={Maofan Yin and Dahlia Malkhi and Michael K. Reiter and Guy Golan Gueta and Ittai Abraham},
      year={2019},
      eprint={1803.05069},
      archivePrefix={arXiv},
      primaryClass={cs.DC}
}
@misc{HotStuff2,
      author = {Dahlia Malkhi and Kartik Nayak},
      title = {Extended Abstract: HotStuff-2: Optimal Two-Phase Responsive BFT},
      howpublished = {Cryptology ePrint Archive, Paper 2023/397},
      year = {2023},
      note = {\url{https://eprint.iacr.org/2023/397}},
      url = {https://eprint.iacr.org/2023/397}
}
@misc{NaorKeidar,
      title={Expected Linear Round Synchronization: The Missing Link for Linear Byzantine SMR}, 
      author={Oded Naor and Idit Keidar},
      year={2020},
      eprint={2002.07539},
      archivePrefix={arXiv},
      primaryClass={cs.CR}
}
@article{FLP_like,
      title = {A simple bivalency proof that t-resilient consensus requires t+1 rounds},
      journal = {Information Processing Letters},
      volume = {71},
      number = {3},
      pages = {155-158},
      year = {1999},
      issn = {0020-0190},
      doi = {https://doi.org/10.1016/S0020-0190(99)00100-3},
      url = {https://www.sciencedirect.com/science/article/pii/S0020019099001003},
      author = {Marcos Kawazoe Aguilera and Sam Toueg},
      keywords = {Distributed computing, Fault tolerance, Consensus, Lower bound, Synchronous system, Bivalency}
}
@misc{Cogsworth,
      title={Cogsworth: Byzantine View Synchronization}, 
      author={Oded Naor and Mathieu Baudet and Dahlia Malkhi and Alexander Spiegelman},
      year={2020},
      eprint={1909.05204},
      archivePrefix={arXiv},
      primaryClass={cs.DC}
}
@inproceedings{LibraBFT,
      title={State Machine Replication in the Libra Blockchain},
      author={Mathieu Baudet and Avery Ching and Andrey Chursin and George Danezis and François Garillot and Zekun Li and Dalia Malki and Oded Naor and Dmitri Perelman and Alberto Sonnino},
      year={2019},
      url={https://api.semanticscholar.org/CorpusID:207923904}
}

@misc{RareSync,
      title={Byzantine Consensus is $\Theta(n^2)$: The Dolev-Reischuk Bound is Tight even in Partial Synchrony! [Extended Version]}, 
      author={Pierre Civit and Muhammad Ayaz Dzulfikar and Seth Gilbert and Vincent Gramoli and Rachid Guerraoui and Jovan Komatovic and Manuel Vidigueira},
      year={2022},
      eprint={2208.09262},
      archivePrefix={arXiv},
      primaryClass={cs.DC}
}
@misc{LewisPye,
      title={Quadratic worst-case message complexity for State Machine Replication in the partial synchrony model}, 
      author={Andrew Lewis-Pye},
      year={2022},
      eprint={2201.01107},
      archivePrefix={arXiv},
      primaryClass={cs.DC}
}
@INPROCEEDINGS{OmniLedger,
      author={Kokoris-Kogias, Eleftherios and Jovanovic, Philipp and Gasser, Linus and Gailly, Nicolas and Syta, Ewa and Ford, Bryan},
      booktitle={2018 IEEE Symposium on Security and Privacy (SP)}, 
      title={OmniLedger: A Secure, Scale-Out, Decentralized Ledger via Sharding}, 
      year={2018},
      volume={},
      number={},
      pages={583-598},
      keywords={Protocols;Throughput;Bitcoin;Scalability;blockchain;sharding;distributed ledger;cross shard;decentralization;Byzantine Fault Tolerant;trust but verify;scalable;ByzCoinX;Atomix;ledger pruning;state blocks;randomness},
      doi={10.1109/SP.2018.000-5}
}
@inproceedings{RapidChain,
      author = {Zamani, Mahdi and Movahedi, Mahnush and Raykova, Mariana},
      title = {RapidChain: Scaling Blockchain via Full Sharding},
      year = {2018},
      isbn = {9781450356930},
      publisher = {Association for Computing Machinery},
      address = {New York, NY, USA},
      url = {https://doi.org/10.1145/3243734.3243853},
      doi = {10.1145/3243734.3243853},
      abstract = {A major approach to overcoming the performance and scalability limitations of current blockchain protocols is to use sharding which is to split the overheads of processing transactions among multiple, smaller groups of nodes. These groups work in parallel to maximize performance while requiring significantly smaller communication, computation, and storage per node, allowing the system to scale to large networks. However, existing sharding-based blockchain protocols still require a linear amount of communication (in the number of participants) per transaction, and hence, attain only partially the potential benefits of sharding. We show that this introduces a major bottleneck to the throughput and latency of these protocols. Aside from the limited scalability, these protocols achieve weak security guarantees due to either a small fault resiliency (e.g., 1/8 and 1/4) or high failure probability, or they rely on strong assumptions (e.g., trusted setup) that limit their applicability to mainstream payment systems. We propose RapidChain, the first sharding-based public blockchain protocol that is resilient to Byzantine faults from up to a 1/3 fraction of its participants, and achieves complete sharding of the communication, computation, and storage overhead of processing transactions without assuming any trusted setup. RapidChain employs an optimal intra-committee consensus algorithm that can achieve very high throughputs via block pipelining, a novel gossiping protocol for large blocks, and a provably-secure reconfiguration mechanism to ensure robustness. Using an efficient cross-shard transaction verification technique, our protocol avoids gossiping transactions to the entire network. Our empirical evaluations suggest that RapidChain can process (and confirm) more than 7,300 tx/sec with an expected confirmation latency of roughly 8.7 seconds in a network of 4,000 nodes with an overwhelming time-to-failure of more than 4,500 years.},
      booktitle = {Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security},
      pages = {931–948},
      numpages = {18},
      keywords = {sharding, public blockchain protocols, distributed consensus},
      location = {Toronto, Canada},
      series = {CCS '18}
}
@inproceedings{MultiThresholdBFT,
      author = {Momose, Atsuki and Ren, Ling},
      title = {Multi-Threshold Byzantine Fault Tolerance},
      year = {2021},
      isbn = {9781450384544},
      publisher = {Association for Computing Machinery},
      address = {New York, NY, USA},
      url = {https://doi.org/10.1145/3460120.3484554},
      doi = {10.1145/3460120.3484554},
      abstract = {Classic Byzantine fault tolerant (BFT) protocols are designed for a specific timing model, most often one of the following: synchronous, asynchronous or partially synchronous. It is well known that the timing model and fault tolerance threshold present inherent trade-offs. Synchronous protocols tolerate up to n/2 Byzantine faults, while asynchronous or partially synchronous protocols tolerate only up to n/3 Byzantine faults. In this work, we generalize the fault thresholds of BFT and introduce a new problem called multi-threshold BFT. Multi-threshold BFT has four separate fault thresholds for safety and liveness under synchrony and asynchrony (or partial-synchrony), respectively. Decomposing the fault thresholds in this way allows us to design protocols that provide meaningful fault tolerance under both synchrony and asynchrony (or partial synchrony). We establish tight fault thresholds bounds for multi-threshold BFT and present protocols achieving them. As an example, we show a BFT state machine replication (SMR) protocol that tolerates up to 2n/3 faults for safety under synchrony while tolerating up to n/3 faults for other scenarios (liveness under synchrony as well as safety and liveness under partial synchrony). This is strictly stronger than classic partially synchronous SMR protocols. We also present a general framework to transform known partially synchronous or asynchronous BFT SMR protocols to additionally enjoy the optimal 2n/3 fault tolerance for safety under synchrony.},
      booktitle = {Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security},
      pages = {1686–1699},
      numpages = {14},
      keywords = {blockchain, byzantine fault tolerance, distributed systems},
      location = {Virtual Event, Republic of Korea},
      series = {CCS '21}
}
@article{nakamoto2008bitcoin,
      title={Bitcoin: A peer-to-peer electronic cash system},
      author={Nakamoto, Satoshi},
      journal={Decentralized business review},
      year={2008}
}
@INPROCEEDINGS{VSS,
      author={Feldman, Paul},
      booktitle={28th Annual Symposium on Foundations of Computer Science (sfcs 1987)}, 
      title={A practical scheme for non-interactive verifiable secret sharing}, 
      year={1987},
      volume={},
      number={},
      pages={427-438},
      keywords={Cryptography;Variable structure systems;Broadcasting;Identity-based encryption;Tiles;Access protocols;Distributed computing;Voting;Nominations and elections;Computational modeling},
      doi={10.1109/SFCS.1987.4}
}

